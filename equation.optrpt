Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: equation._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (equation._) [1] equation.f90(244,8)


    Report from: Code generation optimizations [cg]

equation.f90(244,8):remark #34051: REGISTER ALLOCATION : [equation._] equation.f90:244

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::FIRSTSTEP

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::FIRSTSTEP) [2] equation.f90(253,12)
  -> (270,8) EQUATION::SMOM2
  -> (271,8) EQUATION::SPRE2
  -> (272,8) EQUATION::SDEN2
  -> (273,8) EQUATION::SPSI2
  -> (274,8) EQUATION::SBY2
  -> (280,8) EQUATION::FIN


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(259,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(259,3)
      remark #25399: memcopy generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at equation.f90(259,3)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at equation.f90(259,3)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at equation.f90(259,3)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at equation.f90(259,3)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(260,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(260,3)
      remark #25399: memcopy generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at equation.f90(260,3)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at equation.f90(260,3)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at equation.f90(260,3)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at equation.f90(260,3)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(261,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(261,3)
      remark #25399: memcopy generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at equation.f90(261,3)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at equation.f90(261,3)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at equation.f90(261,3)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at equation.f90(261,3)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(262,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(262,3)
      remark #25399: memcopy generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at equation.f90(262,3)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at equation.f90(262,3)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at equation.f90(262,3)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at equation.f90(262,3)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(263,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(263,3)
      remark #25399: memcopy generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at equation.f90(263,3)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at equation.f90(263,3)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at equation.f90(263,3)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at equation.f90(263,3)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(264,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(264,3)
      remark #25399: memcopy generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at equation.f90(264,3)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at equation.f90(264,3)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at equation.f90(264,3)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at equation.f90(264,3)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(265,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(265,3)
      remark #25399: memcopy generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at equation.f90(265,3)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at equation.f90(265,3)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at equation.f90(265,3)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at equation.f90(265,3)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(259,3):remark #34026: call to memcpy implemented as a call to optimized library version
equation.f90(260,3):remark #34026: call to memcpy implemented as a call to optimized library version
equation.f90(261,3):remark #34026: call to memcpy implemented as a call to optimized library version
equation.f90(262,3):remark #34026: call to memcpy implemented as a call to optimized library version
equation.f90(263,3):remark #34026: call to memcpy implemented as a call to optimized library version
equation.f90(264,3):remark #34026: call to memcpy implemented as a call to optimized library version
equation.f90(265,3):remark #34026: call to memcpy implemented as a call to optimized library version
equation.f90(253,12):remark #34051: REGISTER ALLOCATION : [equation_mp_firststep_] equation.f90:253

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     688
            Global    :     210
            Local     :     478
        Regenerable   :      34
        Spilled       :      83
        
    Routine stack
        Variables     :       4 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       1 [1.00e+00 ~ 0.0%]
        Spills        :     616 bytes*
            Reads     :     119 [1.06e+02 ~ 3.8%]
            Writes    :     126 [9.02e+01 ~ 3.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::STEP

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::STEP) [3] equation.f90(284,12)
  -> (302,10) EQUATION::SMOM2
  -> (303,10) EQUATION::SPRE2
  -> (304,10) EQUATION::SDEN2
  -> (305,10) EQUATION::SPSI2
  -> (306,10) EQUATION::SBY2
  -> (308,10) EQUATION::FIN


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(300,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(284,12):remark #34051: REGISTER ALLOCATION : [equation_mp_step_] equation.f90:284

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r12-r13 zmm0-zmm2]
        
    Routine temporaries
        Total         :      25
            Global    :      10
            Local     :      15
        Regenerable   :       8
        Spilled       :       2
        
    Routine stack
        Variables     :       4 bytes*
            Reads     :       2 [1.18e+01 ~ 8.4%]
            Writes    :       2 [5.88e+00 ~ 4.2%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::SMOM2

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::SMOM2) [4] equation.f90(475,12)
  -> (595,8) EQUATION::HYPERDIF_VEC


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(499,25)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(486,3)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 9
   LOOP END

   LOOP BEGIN at equation.f90(486,3)
      remark #25427: Loop Statements Reordered
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 9
   LOOP END

   LOOP BEGIN at equation.f90(486,3)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(520,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(510,3)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(562,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(532,3)
      remark #25427: Loop Statements Reordered
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(543,17):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(544,18):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(538,17):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(539,18):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(533,17):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(534,18):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(552,13):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(557,30):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(563,37):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(569,19):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(579,34):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(475,12):remark #34051: REGISTER ALLOCATION : [equation_mp_smom2_] equation.f90:475

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     940
            Global    :     291
            Local     :     649
        Regenerable   :       5
        Spilled       :     252
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :    2072 bytes*
            Reads     :     406 [8.06e+04 ~ 15.9%]
            Writes    :     295 [9.02e+03 ~ 1.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::HYPERDIF_VEC

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::HYPERDIF_VEC) [5] equation.f90(1011,12)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(1052,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(1033,3)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 18
   LOOP END

   LOOP BEGIN at equation.f90(1033,3)
      remark #25427: Loop Statements Reordered
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 6
   LOOP END

   LOOP BEGIN at equation.f90(1033,3)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(1070,16)
   remark #25440: unrolled and jammed by 2   (pre-vector) 
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(1065,3)
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 5
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(1053,16):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1050,14):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1046,16):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1043,14):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1039,16):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1036,14):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1066,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1068,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1070,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1066,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1068,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1070,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1011,12):remark #34051: REGISTER ALLOCATION : [equation_mp_hyperdif_vec_] equation.f90:1011

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     523
            Global    :     155
            Local     :     368
        Regenerable   :       4
        Spilled       :     127
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     960 bytes*
            Reads     :     187 [2.35e+04 ~ 8.3%]
            Writes    :     155 [2.72e+03 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::FIN

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::FIN) [6] equation.f90(1290,12)
  -> (1295,8) EQUATION::CAL_B
  -> (1297,8) EQUATION::CAL_AUX_FIELD
  -> (1299,8) EQUATION::CAL_E
  -> (1301,8) EQUATION::VDEPT_HDIF_COEF


    Report from: Code generation optimizations [cg]

equation.f90(1290,12):remark #34051: REGISTER ALLOCATION : [equation_mp_fin_] equation.f90:1290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       6
            Local     :       0
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::CAL_B

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::CAL_B) [7] equation.f90(1305,12)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(1317,18)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(1311,3)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(1315,15):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1316,18):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1305,12):remark #34051: REGISTER ALLOCATION : [equation_mp_cal_b_] equation.f90:1305

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     106
            Global    :      35
            Local     :      71
        Regenerable   :       1
        Spilled       :      12
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      48 bytes*
            Reads     :       6 [2.28e+02 ~ 0.6%]
            Writes    :       6 [4.30e+01 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::CAL_AUX_FIELD

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::CAL_AUX_FIELD) [8] equation.f90(1324,12)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(1343,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(1333,3)
      remark #25427: Loop Statements Reordered
      remark #15300: LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(1369,18)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(1357,3)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(1359,17):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1360,19):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1367,15):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1368,18):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1324,12):remark #34051: REGISTER ALLOCATION : [equation_mp_cal_aux_field_] equation.f90:1324

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     355
            Global    :     101
            Local     :     254
        Regenerable   :       4
        Spilled       :      69
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     552 bytes*
            Reads     :      66 [1.35e+04 ~ 10.3%]
            Writes    :      68 [1.18e+03 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::CAL_E

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::CAL_E) [9] equation.f90(1379,12)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(1403,25)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(1390,3)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 9
   LOOP END

   LOOP BEGIN at equation.f90(1390,3)
      remark #25427: Loop Statements Reordered
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 9
   LOOP END

   LOOP BEGIN at equation.f90(1390,3)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(1379,12):remark #34051: REGISTER ALLOCATION : [equation_mp_cal_e_] equation.f90:1379

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   28[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm12]
        
    Routine temporaries
        Total         :     286
            Global    :      84
            Local     :     202
        Regenerable   :       1
        Spilled       :      79
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     560 bytes*
            Reads     :     109 [3.96e+03 ~ 4.2%]
            Writes    :      99 [2.21e+03 ~ 2.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::VDEPT_HDIF_COEF

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::VDEPT_HDIF_COEF) [10] equation.f90(1411,12)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(1424,20)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 

   LOOP BEGIN at equation.f90(1422,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at equation.f90(1422,5)
   <Remainder>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(1411,12):remark #34051: REGISTER ALLOCATION : [equation_mp_vdept_hdif_coef_] equation.f90:1411

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm4]
        
    Routine temporaries
        Total         :      97
            Global    :      31
            Local     :      66
        Regenerable   :       2
        Spilled       :      13
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      56 bytes*
            Reads     :       9 [3.51e+02 ~ 2.2%]
            Writes    :       7 [7.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::SBY2

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::SBY2) [11] equation.f90(772,12)
  -> (794,8) EQUATION::HYPERDIF


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(786,18)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(780,3)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(782,16):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(783,18):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(772,12):remark #34051: REGISTER ALLOCATION : [equation_mp_sby2_] equation.f90:772

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     119
            Global    :      37
            Local     :      82
        Regenerable   :       1
        Spilled       :      13
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      56 bytes*
            Reads     :       7 [1.92e+02 ~ 0.6%]
            Writes    :       7 [4.40e+01 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::HYPERDIF

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::HYPERDIF) [12] equation.f90(827,12)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(848,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(844,5)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 6
   LOOP END

   LOOP BEGIN at equation.f90(844,5)
      remark #25427: Loop Statements Reordered
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at equation.f90(844,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(862,17)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(861,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at equation.f90(861,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at equation.f90(861,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at equation.f90(861,5)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(848,58):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(847,15):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(862,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(862,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(862,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(862,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(862,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(862,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(862,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(862,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(827,12):remark #34051: REGISTER ALLOCATION : [equation_mp_hyperdif_] equation.f90:827

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     351
            Global    :      94
            Local     :     257
        Regenerable   :       4
        Spilled       :      50
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     328 bytes*
            Reads     :      63 [2.16e+03 ~ 0.9%]
            Writes    :      47 [8.39e+02 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::SPSI2

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::SPSI2) [13] equation.f90(803,12)
  -> (817,8) EQUATION::HYPERDIF


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(811,16)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(810,3)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at equation.f90(810,3)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at equation.f90(810,3)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at equation.f90(810,3)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(803,12):remark #34051: REGISTER ALLOCATION : [equation_mp_spsi2_] equation.f90:803

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :      95
            Global    :      29
            Local     :      66
        Regenerable   :       1
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [1.00e+00 ~ 0.0%]
            Writes    :       1 [1.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::SDEN2

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::SDEN2) [14] equation.f90(314,12)
  -> (343,8) EQUATION::HYPERDIF


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(324,14)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(322,3)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at equation.f90(322,3)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at equation.f90(322,3)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at equation.f90(322,3)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(336,18)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(331,3)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(350,30)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between ifabort_ (351:7) and ifabort_ (351:7)

   LOOP BEGIN at equation.f90(349,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between at (352:7) and at (352:7)
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(332,16):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(333,18):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(314,12):remark #34051: REGISTER ALLOCATION : [equation_mp_sden2_] equation.f90:314

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     330
            Global    :      90
            Local     :     240
        Regenerable   :      42
        Spilled       :      37
        
    Routine stack
        Variables     :     136 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :      10 [8.55e+03 ~ 3.5%]
        Spills        :     248 bytes*
            Reads     :      46 [4.11e+03 ~ 1.7%]
            Writes    :      40 [1.54e+03 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::SPRE2

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::SPRE2) [15] equation.f90(363,12)
  -> (418,8) EQUATION::HYPERDIF


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(376,14)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(374,3)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at equation.f90(374,3)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at equation.f90(374,3)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at equation.f90(374,3)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(393,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(385,3)
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(386,16):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(387,18):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(394,36):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(395,18):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(363,12):remark #34051: REGISTER ALLOCATION : [equation_mp_spre2_] equation.f90:363

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     324
            Global    :     100
            Local     :     224
        Regenerable   :       3
        Spilled       :      51
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     360 bytes*
            Reads     :      75 [3.53e+03 ~ 1.5%]
            Writes    :      62 [6.08e+02 ~ 0.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::SPE2

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::SPE2) [16] equation.f90(427,12)
  -> (463,8) EQUATION::HYPERDIF_E


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(436,14)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(434,3)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at equation.f90(434,3)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at equation.f90(434,3)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at equation.f90(434,3)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(451,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(443,3)
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(444,16):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(445,18):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(452,35):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(453,18):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(427,12):remark #34051: REGISTER ALLOCATION : [equation_mp_spe2_] equation.f90:427

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     324
            Global    :     100
            Local     :     224
        Regenerable   :       3
        Spilled       :      51
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     360 bytes*
            Reads     :      75 [3.53e+03 ~ 1.5%]
            Writes    :      62 [6.08e+02 ~ 0.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::HYPERDIF_E

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::HYPERDIF_E) [17] equation.f90(873,12)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(895,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(891,5)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 6
   LOOP END

   LOOP BEGIN at equation.f90(891,5)
      remark #25427: Loop Statements Reordered
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at equation.f90(891,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(909,17)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(908,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at equation.f90(908,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at equation.f90(908,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at equation.f90(908,5)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(895,58):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(894,15):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(909,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(909,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(909,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(909,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(909,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(909,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(909,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(909,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(873,12):remark #34051: REGISTER ALLOCATION : [equation_mp_hyperdif_e_] equation.f90:873

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     351
            Global    :      94
            Local     :     257
        Regenerable   :       4
        Spilled       :      50
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     328 bytes*
            Reads     :      63 [2.16e+03 ~ 0.9%]
            Writes    :      47 [8.39e+02 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::SPUX2

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::SPUX2) [18] equation.f90(610,12)
  -> (656,8) EQUATION::HYPERDIF


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(625,25)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(620,3)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at equation.f90(620,3)
      remark #25427: Loop Statements Reordered
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at equation.f90(620,3)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(650,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(635,3)
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(636,16):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(637,18):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(646,32):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(647,19):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(610,12):remark #34051: REGISTER ALLOCATION : [equation_mp_spux2_] equation.f90:610

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     395
            Global    :     129
            Local     :     266
        Regenerable   :       4
        Spilled       :      94
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     736 bytes*
            Reads     :     131 [1.30e+04 ~ 7.7%]
            Writes    :     112 [1.90e+03 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::SPUY2

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::SPUY2) [19] equation.f90(666,12)
  -> (706,8) EQUATION::HYPERDIF


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(679,30)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(674,3)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at equation.f90(674,3)
      remark #25427: Loop Statements Reordered
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at equation.f90(674,3)
   <Alternate Alignment Vectorized Loop>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at equation.f90(674,3)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(700,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(687,3)
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(688,16):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(689,18):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(696,32):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(697,19):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(666,12):remark #34051: REGISTER ALLOCATION : [equation_mp_spuy2_] equation.f90:666

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     377
            Global    :     123
            Local     :     254
        Regenerable   :       2
        Spilled       :      71
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     592 bytes*
            Reads     :     104 [2.46e+04 ~ 11.7%]
            Writes    :      84 [7.61e+02 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::SPUZ2

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::SPUZ2) [20] equation.f90(717,12)
  -> (762,8) EQUATION::HYPERDIF


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(732,41)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(727,3)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at equation.f90(727,3)
      remark #25427: Loop Statements Reordered
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at equation.f90(727,3)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(756,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(742,3)
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(743,16):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(744,18):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(752,32):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(753,19):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(717,12):remark #34051: REGISTER ALLOCATION : [equation_mp_spuz2_] equation.f90:717

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     398
            Global    :     129
            Local     :     269
        Regenerable   :       4
        Spilled       :      95
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     752 bytes*
            Reads     :     131 [1.30e+04 ~ 7.4%]
            Writes    :     113 [1.90e+03 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::HYPERDIF_LIMITED

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::HYPERDIF_LIMITED) [21] equation.f90(917,12)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(939,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(935,5)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 6
   LOOP END

   LOOP BEGIN at equation.f90(935,5)
      remark #25427: Loop Statements Reordered
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at equation.f90(935,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(954,17)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(953,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at equation.f90(953,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at equation.f90(953,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at equation.f90(953,5)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(939,58):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(938,15):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(954,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(954,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(954,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(954,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(954,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(954,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(954,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(954,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(917,12):remark #34051: REGISTER ALLOCATION : [equation_mp_hyperdif_limited_] equation.f90:917

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     351
            Global    :      94
            Local     :     257
        Regenerable   :       4
        Spilled       :      50
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     328 bytes*
            Reads     :      63 [2.16e+03 ~ 0.9%]
            Writes    :      47 [8.39e+02 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::HYPERDIF_E_LIMITED

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::HYPERDIF_E_LIMITED) [22] equation.f90(964,12)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(987,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(983,5)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 6
   LOOP END

   LOOP BEGIN at equation.f90(983,5)
      remark #25427: Loop Statements Reordered
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at equation.f90(983,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(1002,17)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(1001,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at equation.f90(1001,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at equation.f90(1001,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at equation.f90(1001,5)
   <Remainder loop for vectorization>
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(987,58):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(986,15):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1002,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1002,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1002,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1002,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1002,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1002,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1002,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1002,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(964,12):remark #34051: REGISTER ALLOCATION : [equation_mp_hyperdif_e_limited_] equation.f90:964

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     351
            Global    :      94
            Local     :     257
        Regenerable   :       4
        Spilled       :      50
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     328 bytes*
            Reads     :      63 [2.16e+03 ~ 0.9%]
            Writes    :      47 [8.39e+02 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::HYPERDIF_VEC_E

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::HYPERDIF_VEC_E) [23] equation.f90(1077,12)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(1119,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(1100,3)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 18
   LOOP END

   LOOP BEGIN at equation.f90(1100,3)
      remark #25427: Loop Statements Reordered
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 6
   LOOP END

   LOOP BEGIN at equation.f90(1100,3)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(1137,16)
   remark #25440: unrolled and jammed by 2   (pre-vector) 
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(1132,3)
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 5
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(1120,14):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1117,14):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1113,14):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1110,14):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1106,14):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1103,14):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1133,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1135,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1137,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1133,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1135,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1137,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1077,12):remark #34051: REGISTER ALLOCATION : [equation_mp_hyperdif_vec_e_] equation.f90:1077

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     523
            Global    :     155
            Local     :     368
        Regenerable   :       4
        Spilled       :     127
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     960 bytes*
            Reads     :     187 [2.35e+04 ~ 8.3%]
            Writes    :     155 [2.72e+03 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::HYPERDIF_VEC_LIMITED

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::HYPERDIF_VEC_LIMITED) [24] equation.f90(1145,12)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(1189,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(1170,3)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 18
   LOOP END

   LOOP BEGIN at equation.f90(1170,3)
      remark #25427: Loop Statements Reordered
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 6
   LOOP END

   LOOP BEGIN at equation.f90(1170,3)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(1209,16)
   remark #25440: unrolled and jammed by 2   (pre-vector) 
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(1204,3)
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 5
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(1190,16):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1187,14):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1183,16):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1180,14):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1176,16):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1173,14):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1205,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1207,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1209,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1205,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1207,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1209,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1145,12):remark #34051: REGISTER ALLOCATION : [equation_mp_hyperdif_vec_limited_] equation.f90:1145

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     523
            Global    :     155
            Local     :     368
        Regenerable   :       4
        Spilled       :     127
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     960 bytes*
            Reads     :     187 [2.35e+04 ~ 8.3%]
            Writes    :     155 [2.72e+03 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EQUATION::HYPERDIF_VEC_E_LIMITED

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQUATION::HYPERDIF_VEC_E_LIMITED) [25] equation.f90(1217,12)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at equation.f90(1259,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(1240,3)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 18
   LOOP END

   LOOP BEGIN at equation.f90(1240,3)
      remark #25427: Loop Statements Reordered
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 6
   LOOP END

   LOOP BEGIN at equation.f90(1240,3)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at equation.f90(1279,16)
   remark #25440: unrolled and jammed by 2   (pre-vector) 
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at equation.f90(1274,3)
      remark #15300: LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 5
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

equation.f90(1260,16):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1257,14):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1253,16):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1250,14):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1246,16):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1243,14):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1275,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1277,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1279,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1275,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1277,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1279,29):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
equation.f90(1217,12):remark #34051: REGISTER ALLOCATION : [equation_mp_hyperdif_vec_e_limited_] equation.f90:1217

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     523
            Global    :     155
            Local     :     368
        Regenerable   :       4
        Spilled       :     127
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     960 bytes*
            Reads     :     187 [2.35e+04 ~ 8.3%]
            Writes    :     155 [2.72e+03 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
