Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: HMHD2D

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (HMHD2D) [1] hmhd2d.f90(226,15)
  -> (252,14) HMHD2D:SETUP
  -> INLINE: (256,12) HMHD2D:BCTPARAM
  -> (257,12) HMHD2D:INIT
  -> INLINE: (340,12) HMHD2D:FINISH


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at hmhd2d.f90(262,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

hmhd2d.f90(226,15):remark #34051: REGISTER ALLOCATION : [MAIN__] hmhd2d.f90:226

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     445
            Global    :      41
            Local     :     404
        Regenerable   :     242
        Spilled       :      11
        
    Routine stack
        Variables     :     844 bytes*
            Reads     :       2 [2.00e+00 ~ 0.4%]
            Writes    :      95 [4.80e+01 ~ 9.6%]
        Spills        :      48 bytes*
            Reads     :       8 [1.21e+01 ~ 2.4%]
            Writes    :       6 [5.20e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: HMHD2D:INIT

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (HMHD2D:INIT) [2] hmhd2d.f90(691,18)
  -> (753,14) HMHD2D:FDCOEF
  -> (794,14) HMHD2D:FDCOEF


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at hmhd2d.f90(709,7)
   remark #15523: loop was not vectorized: loop control variable I was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at hmhd2d.f90(716,7)
   remark #15523: loop was not vectorized: loop control variable I was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at hmhd2d.f90(723,7)
   remark #15523: loop was not vectorized: loop control variable I was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

    Report from: Code generation optimizations [cg]

hmhd2d.f90(691,18):remark #34051: REGISTER ALLOCATION : [hmhd2d_IP_init_] hmhd2d.f90:691

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rsi rdi r8-r13]
        
    Routine temporaries
        Total         :     134
            Global    :      24
            Local     :     110
        Regenerable   :      35
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: HMHD2D:FDCOEF

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (HMHD2D:FDCOEF) [3] hmhd2d.f90(821,18)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at hmhd2d.f90(828,7)
   remark #15300: LOOP WAS VECTORIZED
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 8
LOOP END

LOOP BEGIN at hmhd2d.f90(858,7)
   remark #15300: LOOP WAS VECTORIZED
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 8
LOOP END

LOOP BEGIN at hmhd2d.f90(888,7)
   remark #25427: Loop Statements Reordered
   remark #15300: LOOP WAS VECTORIZED
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 4
LOOP END

LOOP BEGIN at hmhd2d.f90(909,7)
<Peeled loop for vectorization>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 7
LOOP END

LOOP BEGIN at hmhd2d.f90(909,7)
   remark #25427: Loop Statements Reordered
   remark #15300: LOOP WAS VECTORIZED
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 4
LOOP END

LOOP BEGIN at hmhd2d.f90(909,7)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at hmhd2d.f90(980,7)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at hmhd2d.f90(986,7)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at hmhd2d.f90(992,7)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at hmhd2d.f90(996,7)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at hmhd2d.f90(1001,7)
<Peeled loop for vectorization>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
LOOP END

LOOP BEGIN at hmhd2d.f90(1001,7)
   remark #25427: Loop Statements Reordered
   remark #15300: LOOP WAS VECTORIZED
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
LOOP END

LOOP BEGIN at hmhd2d.f90(1001,7)
<Alternate Alignment Vectorized Loop>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
LOOP END

LOOP BEGIN at hmhd2d.f90(1001,7)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at hmhd2d.f90(1014,7)
<Peeled loop for vectorization>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
LOOP END

LOOP BEGIN at hmhd2d.f90(1014,7)
   remark #25427: Loop Statements Reordered
   remark #15300: LOOP WAS VECTORIZED
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
LOOP END

LOOP BEGIN at hmhd2d.f90(1014,7)
<Alternate Alignment Vectorized Loop>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
LOOP END

LOOP BEGIN at hmhd2d.f90(1014,7)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

hmhd2d.f90(829,9):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
hmhd2d.f90(831,9):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
hmhd2d.f90(859,9):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
hmhd2d.f90(861,9):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
hmhd2d.f90(889,9):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
hmhd2d.f90(910,9):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
hmhd2d.f90(981,18):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
hmhd2d.f90(981,18):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
hmhd2d.f90(987,18):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
hmhd2d.f90(987,18):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
hmhd2d.f90(821,18):remark #34051: REGISTER ALLOCATION : [hmhd2d_IP_fdcoef_] hmhd2d.f90:821

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rsi rdi r8-r11 zmm0-zmm15]
        
    Routine temporaries
        Total         :     482
            Global    :      75
            Local     :     407
        Regenerable   :      14
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       2 [6.80e+01 ~ 0.4%]
            Writes    :       2 [6.80e+01 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: HMHD2D:BCTPARAM

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (HMHD2D:BCTPARAM) hmhd2d.f90(1028,18)

===========================================================================

Begin optimization report for: HMHD2D:FINISH

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (HMHD2D:FINISH) hmhd2d.f90(602,18)

===========================================================================

Begin optimization report for: HMHD2D:PARSE

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (HMHD2D:PARSE) hmhd2d.f90(473,18)

===========================================================================

Begin optimization report for: HMHD2D:SETUP

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (HMHD2D:SETUP) [7] hmhd2d.f90(350,18)
  -> INLINE: (381,12) HMHD2D:PARSE


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at hmhd2d.f90(389,10)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ hmhd2d.f90(390,13) ]
LOOP END

    Report from: Code generation optimizations [cg]

hmhd2d.f90(350,18):remark #34051: REGISTER ALLOCATION : [hmhd2d_IP_setup_] hmhd2d.f90:350

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     694
            Global    :     101
            Local     :     593
        Regenerable   :     580
        Spilled       :      62
        
    Routine stack
        Variables     :    4172 bytes*
            Reads     :       2 [1.25e-01 ~ 0.0%]
            Writes    :     530 [5.20e+02 ~ 41.3%]
        Spills        :     448 bytes*
            Reads     :      56 [5.60e+01 ~ 4.4%]
            Writes    :      56 [5.60e+01 ~ 4.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
